{"task_id": "Synthetic/0-2", "prompt": "def string_manipulation(s: str):\n    \"\"\"\n    This function takes a string as input, then returns the result of performing\n    the following sequence of \n    manipulations on that string:\n    -convert the string to lowercase\n    \"\"\"\n", "entry_point": "string_manipulation", "test": "def check(candidate):\n    assert candidate(\"the TEST quick Brown test fox JUMPS test over the tesT lazy test dog\") == \"the test quick brown test fox jumps test over the test lazy test dog\"\n"}
{"task_id": "Synthetic/0-4", "prompt": "def string_manipulation(s: str):\n    \"\"\"\n    This function takes a string as input, then returns the result of performing\n    the following sequence of \n    manipulations on that string:\n    -convert the string to lowercase\n    -remove all vowels from the string\n    \"\"\"\n", "entry_point": "string_manipulation", "test": "def check(candidate):\n    assert candidate(\"the TEST quick Brown test fox JUMPS test over the tesT lazy test dog\") == \"th tst qck brwn tst fx jmps tst vr th tst lzy tst dg\"\n"}
{"task_id": "Synthetic/0-5", "prompt": "def string_manipulation(s: str):\n    \"\"\"\n    This function takes a string as input, then returns the result of performing\n    the following sequence of \n    manipulations on that string:\n    -convert the string to lowercase\n    -remove all vowels from the string\n    -remove every third character from the string\n    \"\"\"\n", "entry_point": "string_manipulation", "test": "def check(candidate):\n    assert candidate(\"the TEST quick Brown test fox JUMPS test over the tesT lazy test dog\") == \"h stqc bwnts f jpsts v t tt zyts d\"\n"}
{"task_id": "Synthetic/0-1", "prompt": "def string_manipulation(s: str):\n    \"\"\"\n    This function takes a string as input, then returns the result of performing\n    the following sequence of \n    manipulations on that string:\n    -convert the string to lowercase\n    -remove all vowels from the string\n    -remove every third character from the string\n    -replace all spaces with exclamation points in the string\n    \"\"\"\n", "entry_point": "string_manipulation", "test": "def check(candidate):\n    assert candidate(\"the TEST quick Brown test fox JUMPS test over the tesT lazy test dog\") == \"h!stqc!bwnts!f!jpsts!v!t!tt!zyts!d\"\n"}
{"task_id": "Synthetic/0-3", "prompt": "def string_manipulation(s: str):\n    \"\"\"\n    This function takes a string as input, then returns the result of performing\n    the following sequence of \n    manipulations on that string:\n    -convert the string to lowercase\n    -remove all vowels from the string\n    -remove every third character from the string\n    -replace all spaces with exclamation points in the string\n    -remove the first and last two characters of the string\n    \"\"\"\n", "entry_point": "string_manipulation", "test": "def check(candidate):\n    assert candidate(\"the TEST quick Brown test fox JUMPS test over the tesT lazy test dog\") == \"stqc!bwnts!f!jpsts!v!t!tt!zyts\"\n"}
{"task_id": "Synthetic/0-6", "prompt": "def string_manipulation(s: str):\n    \"\"\"\n    This function takes a string as input, then returns the result of performing\n    the following sequence of \n    manipulations on that string:\n    -convert the string to lowercase\n    -remove all vowels from the string\n    -remove every third character from the string\n    -replace all spaces with exclamation points in the string\n    -remove the first and last two characters of the string\n    -drop the last half of the string, as computed by characters\n    \"\"\"\n", "entry_point": "string_manipulation", "test": "def check(candidate):\n    assert candidate(\"the TEST quick Brown test fox JUMPS test over the tesT lazy test dog\") == \"stqc!bwnts!f!jp\"\n"}
{"task_id": "Synthetic/0-0", "prompt": "def string_manipulation(s: str):\n    \"\"\"\n    This function takes a string as input, then returns the result of performing\n    the following sequence of \n    manipulations on that string:\n    -convert the string to lowercase\n    -remove all vowels from the string\n    -remove every third character from the string\n    -replace all spaces with exclamation points in the string\n    -remove the first and last two characters of the string\n    -drop the last half of the string, as computed by characters\n    -remove all instances of the lowercase letter s from the string\n    \"\"\"\n", "entry_point": "string_manipulation", "test": "def check(candidate):\n    assert candidate(\"the TEST quick Brown test fox JUMPS test over the tesT lazy test dog\") == \"tqc!bwnt!f!jp\"\n"}
{"task_id": "Synthetic/1-4", "prompt": "def string_manipulation(s: str):\n    \"\"\"\n    This function takes a string as input, then returns the result of performing\n    the following sequence of \n    manipulations on that string:\n    -remove all vowels from the string\n    \"\"\"\n", "entry_point": "string_manipulation", "test": "def check(candidate):\n    assert candidate(\"the TEST quick Brown test fox JUMPS test over the tesT lazy test dog\") == \"th TST qck Brwn tst fx JMPS tst vr th tsT lzy tst dg\"\n"}
{"task_id": "Synthetic/1-0", "prompt": "def string_manipulation(s: str):\n    \"\"\"\n    This function takes a string as input, then returns the result of performing\n    the following sequence of \n    manipulations on that string:\n    -remove all vowels from the string\n    -remove all instances of the lowercase letter s from the string\n    \"\"\"\n", "entry_point": "string_manipulation", "test": "def check(candidate):\n    assert candidate(\"the TEST quick Brown test fox JUMPS test over the tesT lazy test dog\") == \"th TST qck Brwn tt fx JMPS tt vr th tT lzy tt dg\"\n"}
{"task_id": "Synthetic/1-6", "prompt": "def string_manipulation(s: str):\n    \"\"\"\n    This function takes a string as input, then returns the result of performing\n    the following sequence of \n    manipulations on that string:\n    -remove all vowels from the string\n    -remove all instances of the lowercase letter s from the string\n    -drop the last half of the string, as computed by characters\n    \"\"\"\n", "entry_point": "string_manipulation", "test": "def check(candidate):\n    assert candidate(\"the TEST quick Brown test fox JUMPS test over the tesT lazy test dog\") == \"th TST qck Brwn tt fx JM\"\n"}
{"task_id": "Synthetic/1-3", "prompt": "def string_manipulation(s: str):\n    \"\"\"\n    This function takes a string as input, then returns the result of performing\n    the following sequence of \n    manipulations on that string:\n    -remove all vowels from the string\n    -remove all instances of the lowercase letter s from the string\n    -drop the last half of the string, as computed by characters\n    -remove the first and last two characters of the string\n    \"\"\"\n", "entry_point": "string_manipulation", "test": "def check(candidate):\n    assert candidate(\"the TEST quick Brown test fox JUMPS test over the tesT lazy test dog\") == \" TST qck Brwn tt fx \"\n"}
{"task_id": "Synthetic/1-2", "prompt": "def string_manipulation(s: str):\n    \"\"\"\n    This function takes a string as input, then returns the result of performing\n    the following sequence of \n    manipulations on that string:\n    -remove all vowels from the string\n    -remove all instances of the lowercase letter s from the string\n    -drop the last half of the string, as computed by characters\n    -remove the first and last two characters of the string\n    -convert the string to lowercase\n    \"\"\"\n", "entry_point": "string_manipulation", "test": "def check(candidate):\n    assert candidate(\"the TEST quick Brown test fox JUMPS test over the tesT lazy test dog\") == \" tst qck brwn tt fx \"\n"}
{"task_id": "Synthetic/1-1", "prompt": "def string_manipulation(s: str):\n    \"\"\"\n    This function takes a string as input, then returns the result of performing\n    the following sequence of \n    manipulations on that string:\n    -remove all vowels from the string\n    -remove all instances of the lowercase letter s from the string\n    -drop the last half of the string, as computed by characters\n    -remove the first and last two characters of the string\n    -convert the string to lowercase\n    -replace all spaces with exclamation points in the string\n    \"\"\"\n", "entry_point": "string_manipulation", "test": "def check(candidate):\n    assert candidate(\"the TEST quick Brown test fox JUMPS test over the tesT lazy test dog\") == \"!tst!qck!brwn!tt!fx!\"\n"}
{"task_id": "Synthetic/1-5", "prompt": "def string_manipulation(s: str):\n    \"\"\"\n    This function takes a string as input, then returns the result of performing\n    the following sequence of \n    manipulations on that string:\n    -remove all vowels from the string\n    -remove all instances of the lowercase letter s from the string\n    -drop the last half of the string, as computed by characters\n    -remove the first and last two characters of the string\n    -convert the string to lowercase\n    -replace all spaces with exclamation points in the string\n    -remove every third character from the string\n    \"\"\"\n", "entry_point": "string_manipulation", "test": "def check(candidate):\n    assert candidate(\"the TEST quick Brown test fox JUMPS test over the tesT lazy test dog\") == \"ts!qk!rw!t!f!\"\n"}
{"task_id": "Synthetic/2-5", "prompt": "def string_manipulation(s: str):\n    \"\"\"\n    This function takes a string as input, then returns the result of performing\n    the following sequence of \n    manipulations on that string:\n    -remove every third character from the string\n    \"\"\"\n", "entry_point": "string_manipulation", "test": "def check(candidate):\n    assert candidate(\"the TEST quick Brown test fox JUMPS test over the tesT lazy test dog\") == \"heTET uik ron es fx UMS es oerth tsTlay es dg\"\n"}
{"task_id": "Synthetic/2-6", "prompt": "def string_manipulation(s: str):\n    \"\"\"\n    This function takes a string as input, then returns the result of performing\n    the following sequence of \n    manipulations on that string:\n    -remove every third character from the string\n    -drop the last half of the string, as computed by characters\n    \"\"\"\n", "entry_point": "string_manipulation", "test": "def check(candidate):\n    assert candidate(\"the TEST quick Brown test fox JUMPS test over the tesT lazy test dog\") == \"heTET uik ron es fx UM\"\n"}
{"task_id": "Synthetic/2-3", "prompt": "def string_manipulation(s: str):\n    \"\"\"\n    This function takes a string as input, then returns the result of performing\n    the following sequence of \n    manipulations on that string:\n    -remove every third character from the string\n    -drop the last half of the string, as computed by characters\n    -remove the first and last two characters of the string\n    \"\"\"\n", "entry_point": "string_manipulation", "test": "def check(candidate):\n    assert candidate(\"the TEST quick Brown test fox JUMPS test over the tesT lazy test dog\") == \"TET uik ron es fx \"\n"}
{"task_id": "Synthetic/2-2", "prompt": "def string_manipulation(s: str):\n    \"\"\"\n    This function takes a string as input, then returns the result of performing\n    the following sequence of \n    manipulations on that string:\n    -remove every third character from the string\n    -drop the last half of the string, as computed by characters\n    -remove the first and last two characters of the string\n    -convert the string to lowercase\n    \"\"\"\n", "entry_point": "string_manipulation", "test": "def check(candidate):\n    assert candidate(\"the TEST quick Brown test fox JUMPS test over the tesT lazy test dog\") == \"tet uik ron es fx \"\n"}
{"task_id": "Synthetic/2-4", "prompt": "def string_manipulation(s: str):\n    \"\"\"\n    This function takes a string as input, then returns the result of performing\n    the following sequence of \n    manipulations on that string:\n    -remove every third character from the string\n    -drop the last half of the string, as computed by characters\n    -remove the first and last two characters of the string\n    -convert the string to lowercase\n    -remove all vowels from the string\n    \"\"\"\n", "entry_point": "string_manipulation", "test": "def check(candidate):\n    assert candidate(\"the TEST quick Brown test fox JUMPS test over the tesT lazy test dog\") == \"tt k rn s fx \"\n"}
{"task_id": "Synthetic/2-1", "prompt": "def string_manipulation(s: str):\n    \"\"\"\n    This function takes a string as input, then returns the result of performing\n    the following sequence of \n    manipulations on that string:\n    -remove every third character from the string\n    -drop the last half of the string, as computed by characters\n    -remove the first and last two characters of the string\n    -convert the string to lowercase\n    -remove all vowels from the string\n    -replace all spaces with exclamation points in the string\n    \"\"\"\n", "entry_point": "string_manipulation", "test": "def check(candidate):\n    assert candidate(\"the TEST quick Brown test fox JUMPS test over the tesT lazy test dog\") == \"tt!k!rn!s!fx!\"\n"}
{"task_id": "Synthetic/2-0", "prompt": "def string_manipulation(s: str):\n    \"\"\"\n    This function takes a string as input, then returns the result of performing\n    the following sequence of \n    manipulations on that string:\n    -remove every third character from the string\n    -drop the last half of the string, as computed by characters\n    -remove the first and last two characters of the string\n    -convert the string to lowercase\n    -remove all vowels from the string\n    -replace all spaces with exclamation points in the string\n    -remove all instances of the lowercase letter s from the string\n    \"\"\"\n", "entry_point": "string_manipulation", "test": "def check(candidate):\n    assert candidate(\"the TEST quick Brown test fox JUMPS test over the tesT lazy test dog\") == \"tt!k!rn!!fx!\"\n"}
{"task_id": "Synthetic/3-6", "prompt": "def string_manipulation(s: str):\n    \"\"\"\n    This function takes a string as input, then returns the result of performing\n    the following sequence of \n    manipulations on that string:\n    -drop the last half of the string, as computed by characters\n    \"\"\"\n", "entry_point": "string_manipulation", "test": "def check(candidate):\n    assert candidate(\"the TEST quick Brown test fox JUMPS test over the tesT lazy test dog\") == \"the TEST quick Brown test fox JUMP\"\n"}
{"task_id": "Synthetic/3-3", "prompt": "def string_manipulation(s: str):\n    \"\"\"\n    This function takes a string as input, then returns the result of performing\n    the following sequence of \n    manipulations on that string:\n    -drop the last half of the string, as computed by characters\n    -remove the first and last two characters of the string\n    \"\"\"\n", "entry_point": "string_manipulation", "test": "def check(candidate):\n    assert candidate(\"the TEST quick Brown test fox JUMPS test over the tesT lazy test dog\") == \"e TEST quick Brown test fox JU\"\n"}
{"task_id": "Synthetic/3-4", "prompt": "def string_manipulation(s: str):\n    \"\"\"\n    This function takes a string as input, then returns the result of performing\n    the following sequence of \n    manipulations on that string:\n    -drop the last half of the string, as computed by characters\n    -remove the first and last two characters of the string\n    -remove all vowels from the string\n    \"\"\"\n", "entry_point": "string_manipulation", "test": "def check(candidate):\n    assert candidate(\"the TEST quick Brown test fox JUMPS test over the tesT lazy test dog\") == \" TST qck Brwn tst fx J\"\n"}
{"task_id": "Synthetic/3-0", "prompt": "def string_manipulation(s: str):\n    \"\"\"\n    This function takes a string as input, then returns the result of performing\n    the following sequence of \n    manipulations on that string:\n    -drop the last half of the string, as computed by characters\n    -remove the first and last two characters of the string\n    -remove all vowels from the string\n    -remove all instances of the lowercase letter s from the string\n    \"\"\"\n", "entry_point": "string_manipulation", "test": "def check(candidate):\n    assert candidate(\"the TEST quick Brown test fox JUMPS test over the tesT lazy test dog\") == \" TST qck Brwn tt fx J\"\n"}
{"task_id": "Synthetic/3-5", "prompt": "def string_manipulation(s: str):\n    \"\"\"\n    This function takes a string as input, then returns the result of performing\n    the following sequence of \n    manipulations on that string:\n    -drop the last half of the string, as computed by characters\n    -remove the first and last two characters of the string\n    -remove all vowels from the string\n    -remove all instances of the lowercase letter s from the string\n    -remove every third character from the string\n    \"\"\"\n", "entry_point": "string_manipulation", "test": "def check(candidate):\n    assert candidate(\"the TEST quick Brown test fox JUMPS test over the tesT lazy test dog\") == \"TS qk rw t f J\"\n"}
{"task_id": "Synthetic/3-2", "prompt": "def string_manipulation(s: str):\n    \"\"\"\n    This function takes a string as input, then returns the result of performing\n    the following sequence of \n    manipulations on that string:\n    -drop the last half of the string, as computed by characters\n    -remove the first and last two characters of the string\n    -remove all vowels from the string\n    -remove all instances of the lowercase letter s from the string\n    -remove every third character from the string\n    -convert the string to lowercase\n    \"\"\"\n", "entry_point": "string_manipulation", "test": "def check(candidate):\n    assert candidate(\"the TEST quick Brown test fox JUMPS test over the tesT lazy test dog\") == \"ts qk rw t f j\"\n"}
{"task_id": "Synthetic/3-1", "prompt": "def string_manipulation(s: str):\n    \"\"\"\n    This function takes a string as input, then returns the result of performing\n    the following sequence of \n    manipulations on that string:\n    -drop the last half of the string, as computed by characters\n    -remove the first and last two characters of the string\n    -remove all vowels from the string\n    -remove all instances of the lowercase letter s from the string\n    -remove every third character from the string\n    -convert the string to lowercase\n    -replace all spaces with exclamation points in the string\n    \"\"\"\n", "entry_point": "string_manipulation", "test": "def check(candidate):\n    assert candidate(\"the TEST quick Brown test fox JUMPS test over the tesT lazy test dog\") == \"ts!qk!rw!t!f!j\"\n"}
{"task_id": "Synthetic/4-2", "prompt": "def string_manipulation(s: str):\n    \"\"\"\n    This function takes a string as input, then returns the result of performing\n    the following sequence of \n    manipulations on that string:\n    -convert the string to lowercase\n    \"\"\"\n", "entry_point": "string_manipulation", "test": "def check(candidate):\n    assert candidate(\"the TEST quick Brown test fox JUMPS test over the tesT lazy test dog\") == \"the test quick brown test fox jumps test over the test lazy test dog\"\n"}
{"task_id": "Synthetic/4-0", "prompt": "def string_manipulation(s: str):\n    \"\"\"\n    This function takes a string as input, then returns the result of performing\n    the following sequence of \n    manipulations on that string:\n    -convert the string to lowercase\n    -remove all instances of the lowercase letter s from the string\n    \"\"\"\n", "entry_point": "string_manipulation", "test": "def check(candidate):\n    assert candidate(\"the TEST quick Brown test fox JUMPS test over the tesT lazy test dog\") == \"the tet quick brown tet fox jump tet over the tet lazy tet dog\"\n"}
{"task_id": "Synthetic/4-3", "prompt": "def string_manipulation(s: str):\n    \"\"\"\n    This function takes a string as input, then returns the result of performing\n    the following sequence of \n    manipulations on that string:\n    -convert the string to lowercase\n    -remove all instances of the lowercase letter s from the string\n    -remove the first and last two characters of the string\n    \"\"\"\n", "entry_point": "string_manipulation", "test": "def check(candidate):\n    assert candidate(\"the TEST quick Brown test fox JUMPS test over the tesT lazy test dog\") == \"e tet quick brown tet fox jump tet over the tet lazy tet d\"\n"}
{"task_id": "Synthetic/4-1", "prompt": "def string_manipulation(s: str):\n    \"\"\"\n    This function takes a string as input, then returns the result of performing\n    the following sequence of \n    manipulations on that string:\n    -convert the string to lowercase\n    -remove all instances of the lowercase letter s from the string\n    -remove the first and last two characters of the string\n    -replace all spaces with exclamation points in the string\n    \"\"\"\n", "entry_point": "string_manipulation", "test": "def check(candidate):\n    assert candidate(\"the TEST quick Brown test fox JUMPS test over the tesT lazy test dog\") == \"e!tet!quick!brown!tet!fox!jump!tet!over!the!tet!lazy!tet!d\"\n"}
{"task_id": "Synthetic/4-5", "prompt": "def string_manipulation(s: str):\n    \"\"\"\n    This function takes a string as input, then returns the result of performing\n    the following sequence of \n    manipulations on that string:\n    -convert the string to lowercase\n    -remove all instances of the lowercase letter s from the string\n    -remove the first and last two characters of the string\n    -replace all spaces with exclamation points in the string\n    -remove every third character from the string\n    \"\"\"\n", "entry_point": "string_manipulation", "test": "def check(candidate):\n    assert candidate(\"the TEST quick Brown test fox JUMPS test over the tesT lazy test dog\") == \"!tt!uik!ron!etfo!jmpte!oerth!tt!az!tt!\"\n"}
{"task_id": "Synthetic/4-6", "prompt": "def string_manipulation(s: str):\n    \"\"\"\n    This function takes a string as input, then returns the result of performing\n    the following sequence of \n    manipulations on that string:\n    -convert the string to lowercase\n    -remove all instances of the lowercase letter s from the string\n    -remove the first and last two characters of the string\n    -replace all spaces with exclamation points in the string\n    -remove every third character from the string\n    -drop the last half of the string, as computed by characters\n    \"\"\"\n", "entry_point": "string_manipulation", "test": "def check(candidate):\n    assert candidate(\"the TEST quick Brown test fox JUMPS test over the tesT lazy test dog\") == \"!tt!uik!ron!etfo!jm\"\n"}
{"task_id": "Synthetic/4-4", "prompt": "def string_manipulation(s: str):\n    \"\"\"\n    This function takes a string as input, then returns the result of performing\n    the following sequence of \n    manipulations on that string:\n    -convert the string to lowercase\n    -remove all instances of the lowercase letter s from the string\n    -remove the first and last two characters of the string\n    -replace all spaces with exclamation points in the string\n    -remove every third character from the string\n    -drop the last half of the string, as computed by characters\n    -remove all vowels from the string\n    \"\"\"\n", "entry_point": "string_manipulation", "test": "def check(candidate):\n    assert candidate(\"the TEST quick Brown test fox JUMPS test over the tesT lazy test dog\") == \"!tt!k!rn!tf!jm\"\n"}